{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../js/silkscreen.ts","../../js/graphics.ts","../../js/canvas.ts","../../js/Checkboxes.svelte","../../js/index.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export const A = [\n    [false, true, true, false],\n    [true, false, false, true],\n    [true, true, true, true],\n    [true, false, false, true],\n    [true, false, false, true]\n];\nexport const B = [\n    [true, true, true, false],\n    [true, false, false, true],\n    [true, true, true, true],\n    [true, false, false, true],\n    [true, true, true, false]\n];\nexport const C = [\n    [false, true, true, false],\n    [true, false, false, true],\n    [true, false, false, false],\n    [true, false, false, true],\n    [false, true, true, false]\n];\nexport const D = [\n    [true, true, true, false],\n    [true, false, false, true],\n    [true, false, false, true],\n    [true, false, false, true],\n    [true, true, true, false]\n];\nexport const E = [\n    [true, true, true],\n    [true, false, false],\n    [true, true, true],\n    [true, false, false],\n    [true, true, true]\n];\nexport const F = [\n    [true, true, true],\n    [true, false, false],\n    [true, true, true],\n    [true, false, false],\n    [true, false, false]\n];\nexport const G = [\n    [false, true, true, true],\n    [true, false, false, false],\n    [true, false, true, true],\n    [true, false, false, true],\n    [false, true, true, false]\n];\nexport const H = [\n    [true, false, false, true],\n    [true, false, false, true],\n    [true, true, true, true],\n    [true, false, false, true],\n    [true, false, false, true]\n];\nexport const I = [[true], [true], [true], [true], [true]];\nexport const J = [\n    [false, false, false, true],\n    [false, false, false, true],\n    [false, false, false, true],\n    [true, false, false, true],\n    [false, true, true, false]\n];\nexport const K = [\n    [true, false, false, true],\n    [true, false, true, false],\n    [true, true, false, false],\n    [true, false, true, false],\n    [true, false, false, true]\n];\nexport const L = [\n    [true, false, false],\n    [true, false, false],\n    [true, false, false],\n    [true, false, false],\n    [true, true, true]\n];\nexport const M = [\n    [true, false, false, false, true],\n    [true, true, false, true, true],\n    [true, false, true, false, true],\n    [true, false, false, false, true],\n    [true, false, false, false, true]\n];\nexport const N = [\n    [true, false, false, false, true],\n    [true, true, false, false, true],\n    [true, false, true, false, true],\n    [true, false, false, true, true],\n    [true, false, false, false, true]\n];\nexport const O = [\n    [false, true, true, true, false],\n    [true, false, false, false, true],\n    [true, false, false, false, true],\n    [true, false, false, false, true],\n    [false, true, true, true, false]\n];\nexport const P = [\n    [true, true, true, false],\n    [true, false, false, true],\n    [true, true, true, false],\n    [true, false, false, false],\n    [true, false, false, false]\n];\nexport const Q = [\n    [false, true, true, false],\n    [true, false, false, true],\n    [true, false, false, true],\n    [true, false, false, true],\n    [false, true, true, false],\n    [false, false, false, true]\n];\nexport const R = [\n    [true, true, true, false],\n    [true, false, false, true],\n    [true, true, true, false],\n    [true, false, true, false],\n    [true, false, false, true]\n];\nexport const S = [\n    [false, true, true, true],\n    [true, false, false, false],\n    [false, true, true, false],\n    [false, false, false, true],\n    [true, true, true, false]\n];\nexport const T = [\n    [true, true, true],\n    [false, true, false],\n    [false, true, false],\n    [false, true, false],\n    [false, true, false]\n];\nexport const U = [\n    [true, false, false, true],\n    [true, false, false, true],\n    [true, false, false, true],\n    [true, false, false, true],\n    [false, true, true, false]\n];\nexport const V = [\n    [true, false, false, false, true],\n    [true, false, false, false, true],\n    [false, true, false, true, false],\n    [false, true, false, true, false],\n    [false, false, true, false, false]\n];\nexport const W = [\n    [true, false, false, false, true],\n    [true, false, true, false, true],\n    [true, false, true, false, true],\n    [true, false, true, false, true],\n    [false, true, false, true, false]\n];\nexport const X = [\n    [true, false, false, false, true],\n    [false, true, false, true, false],\n    [false, false, true, false, false],\n    [false, true, false, true, false],\n    [true, false, false, false, true]\n];\nexport const Y = [\n    [true, false, false, false, true],\n    [false, true, false, true, false],\n    [false, false, true, false, false],\n    [false, false, true, false, false],\n    [false, false, true, false, false]\n];\nexport const Z = [\n    [true, true, true],\n    [false, false, true],\n    [false, true, false],\n    [true, false, false],\n    [true, true, true]\n];\nexport const ALPHABET_MAP = {\n    A: A,\n    B: B,\n    C: C,\n    D: D,\n    E: E,\n    F: F,\n    G: G,\n    H: H,\n    I: I,\n    J: J,\n    K: K,\n    L: L,\n    M: M,\n    N: N,\n    O: O,\n    P: P,\n    Q: Q,\n    R: R,\n    S: S,\n    T: T,\n    U: U,\n    V: V,\n    W: W,\n    X: X,\n    Y: Y,\n    Z: Z\n};\nexport const ALPHABET_ARRAY = [\n    A,\n    B,\n    C,\n    D,\n    E,\n    F,\n    G,\n    H,\n    I,\n    J,\n    K,\n    L,\n    M,\n    N,\n    O,\n    P,\n    Q,\n    R,\n    S,\n    T,\n    U,\n    V,\n    W,\n    X,\n    Y,\n    Z\n];\n","function clamp(min, max, val) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nfunction scale(larger, smaller) {\n    return Math.floor(larger / smaller);\n}\nexport class Dimensions {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    clamp(containingDimensions) {\n        const width = clamp(0, containingDimensions.width, this.width);\n        const height = clamp(0, containingDimensions.height, this.height);\n        return new Dimensions(width, height);\n    }\n    sample(dimensions) {\n        const width = scale(this.width, dimensions.width);\n        const height = scale(this.height, dimensions.height);\n        return new Dimensions(width, height);\n    }\n    grow(direction, amount) {\n        switch (direction) {\n            case \"HORIZONTALLY\":\n                return this.growHorizontally(amount);\n            case \"VERTICALLY\":\n                return this.growVertically(amount);\n            default:\n                throw new Error('Can only grow \"HORIZONTALLY\"  or \"VERTICALLY\".');\n        }\n    }\n    growHorizontally(amount) {\n        return new Dimensions(this.width + amount, this.height);\n    }\n    growVertically(amount) {\n        return new Dimensions(this.width, this.height + amount);\n    }\n}\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n}\nexport class Bitmap {\n    constructor(dimensions, transparent = true) {\n        this.dimensions = dimensions;\n        this.transparent = transparent;\n        this.bitmap = new Array(this.length);\n        return this;\n    }\n    get length() {\n        return this.dimensions.width * this.dimensions.height;\n    }\n    index(point) {\n        return point.y * this.dimensions.width + point.x;\n    }\n    valueAtPoint(point) {\n        return this.bitmap[this.index(point)];\n    }\n    isWithinBounds(point) {\n        return point.x < this.dimensions.width && point.y < this.dimensions.height;\n    }\n    drawPixel(point) {\n        if (this.isWithinBounds(point)) {\n            this.bitmap[this.index(point)] = true;\n        }\n    }\n    asTwoDimensionalArray() {\n        const array = [];\n        for (let rowIndex = 0; rowIndex < this.dimensions.height; rowIndex++) {\n            for (let columnIndex = 0; columnIndex < this.dimensions.width; columnIndex++) {\n                array[rowIndex][columnIndex] = false;\n            }\n        }\n        return array;\n    }\n}\nconst Directions = {\n    UP: 0,\n    RIGHT: 1,\n    DOWN: 2,\n    LEFT: 3\n};\n/**\n * return the next positions for a point within the dimensions's bounds\n */\nexport function randomWalk(point, dimensions) {\n    const nextDirection = Math.floor(Math.random() * 4);\n    if (nextDirection === Directions.UP && point.y > 0) {\n        return new Point(point.x, point.y - 1);\n    }\n    if (nextDirection === Directions.RIGHT && point.x < dimensions.width) {\n        return new Point(point.x + 1, point.y);\n    }\n    if (nextDirection === Directions.DOWN && point.y < dimensions.height) {\n        return new Point(point.x, point.y + 1);\n    }\n    if (nextDirection === Directions.LEFT && point.x < dimensions.width) {\n        return new Point(point.x - 1, point.y);\n    }\n    return point;\n}\n","import { ALPHABET_MAP } from \"./silkscreen\";\nimport { Point } from \"./graphics\";\nexport function emptyCanvas(width, height) {\n    const rows = [];\n    for (let i = 0; i < height; i++) {\n        const row = [];\n        for (let j = 0; j < width; j++) {\n            row.push(false);\n        }\n        rows.push(row);\n    }\n    return rows;\n}\nfunction width(canvas) {\n    return canvas[0].length;\n}\nfunction height(canvas) {\n    return canvas.length;\n}\nfunction isWithinBounds(canvas, point) {\n    return point.x < width(canvas) && point.y < height(canvas);\n}\nfunction combineCanvas(bottomCanvas, topCanvas, offset = new Point(0, 0)) {\n    for (let row = 0; row < topCanvas.length; row++) {\n        for (let column = 0; column < topCanvas[row].length; column++) {\n            if (isWithinBounds(bottomCanvas, new Point(column + offset.x, row + offset.y))) {\n                bottomCanvas[row + offset.y][column + offset.x] =\n                    topCanvas[row][column];\n            }\n        }\n    }\n    return bottomCanvas;\n}\nexport function flipBit(canvas, x, y) {\n    if (isWithinBounds(canvas, new Point(x, y))) {\n        canvas[y][x] = true;\n    }\n}\nfunction letterCanvas(letter) {\n    if (letter === \" \") {\n        return [[false], [false], [false], [false], [false]];\n    }\n    return ALPHABET_MAP[letter[0].toUpperCase()];\n}\nexport function drawText(canvas, text, offset = new Point(0, 0)) {\n    let xOffset = 0 + offset.x;\n    return text.split(\"\").reduce(function (canvas, letter) {\n        const newOffset = new Point(xOffset, offset.y);\n        const newCanvas = combineCanvas(canvas, letterCanvas(letter), newOffset);\n        xOffset += width(letterCanvas(letter)) + 1;\n        return newCanvas;\n    }, canvas);\n}\n","<script lang=\"ts\">\n  import { onMount } from \"svelte\";\n\n  import { drawText, emptyCanvas, flipBit } from \"./canvas\";\n  import { randomWalk, Point, Dimensions } from \"./graphics\";\n\n  let mounted = false;\n  let points = [];\n  let clientWidth = 10;\n  let clientHeight = 10;\n  let checkboxWidth = 16;\n  let checkboxHeight = 16;\n  let sampledDimensions = new Dimensions(10, 10);\n  let canvas = emptyCanvas(10, 10);\n  let interval;\n\n  $: if (mounted) {\n    const containerDimensions = new Dimensions(clientWidth, clientHeight);\n    const checkboxDimensions = new Dimensions(checkboxWidth, checkboxHeight);\n    sampledDimensions = containerDimensions.sample(checkboxDimensions);\n    canvas = emptyCanvas(sampledDimensions.width, sampledDimensions.height);\n\n    if (sampledDimensions.width > 38) {\n      canvas = drawText(canvas, \"adrian\", new Point(2, 2));\n      canvas = drawText(canvas, \"schaedle\", new Point(2, 9));\n    }\n\n    points.forEach(point => flipBit(canvas, point.x, point.y));\n    points = points;\n  }\n\n  onMount(function() {\n    interval = setInterval(tick, 1500);\n\n    var el = document.querySelector(\".js-Checkboxes\");\n\n    if (el && el.classList.contains(\"isPaused\")) {\n      el.classList.remove(\"isPaused\");\n    }\n\n    mounted = true;\n\n    return function cleanup() {\n      clearInterval(interval);\n    };\n  });\n\n  function tick() {\n    points = points.map(point => randomWalk(point, sampledDimensions));\n  }\n\n  function addPoint(event) {\n    clearInterval(interval)\n    const x = parseInt(event.target.dataset.x, 10)\n    const y = parseInt(event.target.dataset.y, 10)\n    const newPoint = new Point(x, y);\n    points = [...points, newPoint];\n    interval = setInterval(tick, 1500);\n  }\n</script>\n\n<style>\n  .CheckboxCanvas {\n    box-sizing: border-box;\n    overflow: hidden;\n    width: 100%;\n    height: 100%;\n  }\n\n  .Info {\n    background-color: white;\n    z-index: 1;\n    position: absolute;\n    top: 20px;\n    left: 20px;\n    padding: 10px;\n  }\n\n  .CheckboxCanvas div {\n    margin: 0;\n    line-height: 0;\n  }\n\n  label.Checkbox {\n    padding: 3px 2px;\n    display: inline-block;\n    overflow: hidden;\n  }\n\n  .Checkbox input {\n    display: block;\n    margin: 0;\n    padding: 0;\n  }\n\n  .visually-hidden {\n    visibility: hidden;\n    position: absolute;\n  }\n</style>\n\n<!-- This element is used to measure the size of a checkbox, so we know how many checkboxes can fit inside the grid -->\n<div class=\"visually-hidden\">\n  <label\n    class=\"Checkbox\"\n    bind:clientWidth=\"{checkboxWidth}\"\n    bind:clientHeight=\"{checkboxHeight}\"\n  >\n    <input type=\"checkbox\" />\n  </label>\n</div>\n\n<div\n  bind:clientWidth=\"{clientWidth}\"\n  bind:clientHeight=\"{clientHeight}\"\n  class=\"CheckboxCanvas\"\n>\n  {#each canvas as row, y}\n  <div>\n    {#each row as checked, x}\n    <label class=\"Checkbox\">\n      <input type=\"checkbox\" {checked} data-x={x} data-y={y} on:change={addPoint} />\n    </label>\n    {/each}\n  </div>\n  {/each}\n</div>\n","import Checkboxes from \"./Checkboxes.svelte\";\nconst target = document.querySelector(\".js-Checkboxes\");\nconst checkboxes = new Checkboxes({\n    target: target\n});\nexport default checkboxes;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","space","data","createTextNode","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","crossorigin","current_component","is_crossorigin","undefined","window","parent","error","add_resize_listener","computed_style","getComputedStyle","z_index","parseInt","zIndex","position","style","iframe","tabIndex","unsubscribe","src","source","contentWindow","onload","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","globals","globalThis","global","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","on_destroy","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","m","new_on_destroy","map","filter","mount_component","ALPHABET_MAP","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","clamp","min","max","val","scale","larger","smaller","Math","floor","Dimensions","[object Object]","width","height","this","containingDimensions","dimensions","direction","amount","growHorizontally","growVertically","Point","x","y","Directions","emptyCanvas","rows","row","j","canvas","isWithinBounds","point","letterCanvas","letter","toUpperCase","drawText","text","offset","xOffset","split","reduce","newOffset","newCanvas","bottomCanvas","topCanvas","column","combineCanvas","interval","mounted","points","clientWidth","clientHeight","checkboxWidth","checkboxHeight","sampledDimensions","tick","nextDirection","random","randomWalk","setInterval","el","querySelector","classList","contains","remove","clearInterval","containerDimensions","checkboxDimensions","sample","flipBit","dataset","newPoint","destroy_component","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys"],"mappings":"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"}